The Chain of Responsibility Design Pattern is a behavioral design pattern that allows you to pass a request along a chain of handlers,
 where each handler decides either to handle the request or pass it to the next in the chain.

🔧 Real-World Analogy
Think of customer service escalation:
You contact Level 1 Support → if they can’t solve it, it goes to Level 2, then Level 3, and so on.
Each support level decides whether to handle the issue or pass it along.

✅ When to Use
You want to decouple the sender and receiver of a request.
Multiple objects can handle a request, but the handler isn’t known in advance.
You want to build a flexible and extensible request-processing pipeline.

👨‍💻 Java Example: Logging System
Let’s build a log handler where:
Info logs are handled by the InfoLogger.
Debug logs are handled by the DebugLogger.
Error logs go to the ErrorLogger.